@page "/counters"

<h1>Counter</h1>

<p>Current counts: @currentCount?.Counter1 , @currentCount?.Counter2</p>

<button class="btn btn-primary" onclick="@IncrementCount1">Click me 1</button>
<button class="btn btn-secondary" onclick="@IncrementCount2">Click me 2</button>

@functions {

  MyData currentCount;
  Services.LifeCycleCache<MyData> state;

  void IncrementCount1()
  {
      currentCount.Counter1++;
  }
  void IncrementCount2()
  {
      currentCount.Counter2++;
  }

  protected override async Task OnParametersSetAsync()
  {
      await base.OnParametersSetAsync();
      try
      {
          if (currentCount == null)
          {
              var state = await Services.LifeCycle.GetAppState<MyData>(name: "Counters", timeout: 10);
              if (state.ObjectData == null)
              {
                  Console.WriteLine("Object data is null");
                  state.ObjectData = new MyData();
              }
              currentCount = state.ObjectData;
          }
      }
      catch (Exception ex)
      {
          Console.WriteLine($"No saved state : {ex.GetBaseException().Message}");
      }
      if (currentCount == null)
      {
          currentCount = new MyData();
      }
  }

  [Serializable]
  class MyData
  {
      public int Counter1;
      public int Counter2;
      public MyData()
      {

      }
  }
  //
}
